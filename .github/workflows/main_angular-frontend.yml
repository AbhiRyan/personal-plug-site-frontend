# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: deploy azure backend

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME_LOWERCASE: abhiryan/personal-plug-site-backend
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}

jobs:
  build-and-push-image:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: read
      packages: write

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ env.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
          POSTGRES_DB: PERSONAL_PLUG_DB
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8100:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      
      - name: Build with Maven
        run: mvn clean install
        env:
          SECRET_KEY: ${{ env.SECRET_KEY }}
          KEY_STORE_PASSWORD: ${{ env.KEY_STORE_PASSWORD }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_CONNECTION_STRING: ${{ env.DB_CONNECTION_STRING }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build-and-push-image
    environment:
      name: 'prod'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'personal-plug-site'
          slot-name: 'production'
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_d7c62f79f5f6402192ce40edfc098be6 }}
          images: "${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.sha }}"
